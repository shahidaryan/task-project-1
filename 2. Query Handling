class RAGPipeline:
    def __init__(self, pdf_loader):
        self.pdf_loader = pdf_loader
        self.embeddings = None
        self.index = None

    def build_index(self):
        self.embeddings = self.pdf_loader.embed_chunks()
        dimension = self.embeddings.shape[1]
        self.index = faiss.IndexFlatL2(dimension)
        self.index.add(np.array(self.embeddings).astype('float32'))

    def query(self, user_query):
        query_embedding = self.pdf_loader.model.encode([user_query])
        distances, indices = self.index.search(np.array(query_embedding).astype('float32'), k=5)
        return [self.pdf_loader.text_chunks[i] for i in indices[0]]

# Usage
rag_pipeline = RAGPipeline(pdf_loader)
rag_pipeline.build_index()
user_query = "What are the main findings in the reports?"
retrieved_chunks = rag_pipeline.query(user_query)
